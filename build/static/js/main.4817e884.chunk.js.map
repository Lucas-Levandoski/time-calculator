{"version":3,"sources":["enums/index.tsx","functions/validate-input.tsx","functions/equation-to-seconds.tsx","functions/seconds-to.tsx","components/history/index.tsx","components/keypad/index.tsx","components/date-picker/index.tsx","components/calculator/index.tsx","functions/split-equation.tsx","functions/clean-raw-equation.tsx","pages/landing-page/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ReturnTypes","KeypadTypes","operationChars","timeChars","ValidateInput","equations","errorMessage","every","equation","duplication","TimeString","chars","split","hasDuplicates","i","length","char","slice","includes","CheckDuplications","forEach","index","EquationToSeconds","splitedEquations","splitedEquation","item","timeString","result","math","replaceAll","substr","TimeStringToNumber","Math","round","join","SecondsTo","resultType","secontsTo","days","toDays","floor","hours","minutes","seconds","SecondsToDays","toHours","SecondsToHours","toMinutes","SecondsToMinutes","History","props","equationHistory","className","Keypad","onClick","addCharacter","DatePicker","useState","Date","startDate","setStartDate","endDate","setEndDate","calculateTime","getTime","colSpan","value","onChange","date","time","newDate","toJSON","format","disableClock","toISOString","type","Calculator","calcInput","setCalcInput","setResultType","setErrorMessage","showHistory","setShowHistory","history","setHistory","calc","keypadType","submitCalcInput","e","preventDefault","preparedEquation","CleanRawEquation","SplitEquation","error","splice","push","addEquationToHistory","onSubmit","target","name","checked","character","setHistInput","selectedHist","equationsHistory","LandingPage","userMode","localStorage","getItem","mode","setMode","nextMode","setItem","changeMode","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4817e884.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-shadow */\r\n\r\nexport enum ReturnTypes {\r\n  days = 'days',\r\n  hours = 'hours',\r\n  minutes = 'minutes',\r\n  seconds = 'seconds'\r\n}\r\n\r\nexport enum KeypadTypes {\r\n  calc = 'calc',\r\n  timeInBetween = 'timeInBetween',\r\n}\r\n","export const operationChars: string[] = ['+', '-', '*', '/', '(', ')'];\r\nexport const timeChars: string[] = ['d', 'h', 'm', 's'];\r\n\r\nexport function CheckDuplications(TimeString: string) {\r\n  const chars = TimeString.split('');\r\n  let hasDuplicates = null;\r\n\r\n  for (let i = 0; i < chars.length; i += 1) {\r\n    const char = chars[i];\r\n    const charsSoFar = chars.slice(i + 1, chars.length);\r\n\r\n    if (charsSoFar.includes(char) && timeChars.includes(char)) {\r\n      hasDuplicates = char;\r\n      i = chars.length;\r\n    }\r\n  }\r\n\r\n  return hasDuplicates;\r\n}\r\n\r\nexport default function ValidateInput(equations: string[]) {\r\n  let errorMessage = null;\r\n\r\n  equations.every((equation) => {\r\n    // check duplications like 15hh\r\n    const duplication = CheckDuplications(equation);\r\n\r\n    if (duplication) {\r\n      errorMessage = `sentence (${equation}) has more than one (${duplication})`;\r\n      return false;\r\n    }\r\n\r\n    const chars = equation.split('');\r\n\r\n    chars.forEach((char, index) => {\r\n      if (!operationChars.includes(char) && !timeChars.includes(char) && !+char && char !== '0') {\r\n        errorMessage = `character (${char}) on sentence (${equation}) is not accepted`;\r\n      }\r\n\r\n      if (!+char && !+chars[index - 1]) {\r\n        errorMessage = `your sentence (${equation}) does not have a number before (${char})`;\r\n      }\r\n    });\r\n\r\n    return true;\r\n  });\r\n\r\n  return errorMessage;\r\n}\r\n","import * as math from 'mathjs';\r\nimport { operationChars } from './validate-input';\r\n\r\nfunction TimeStringToNumber(timeString: string) {\r\n  let result = timeString;\r\n\r\n  if (+result) {\r\n    return math.evaluate(result);\r\n  }\r\n\r\n  result = result.replaceAll('d', '*86400+');\r\n  result = result.replaceAll('h', '*3600+');\r\n  result = result.replaceAll('m', '*60+');\r\n  result = result.replaceAll('s', '*1+');\r\n\r\n  return math.evaluate(result.substr(0, result.length - 1));\r\n}\r\n\r\nexport default function EquationToSeconds(splitedEquations: string[]) {\r\n  const splitedEquation = splitedEquations;\r\n\r\n  splitedEquation.forEach((item, index) => {\r\n    if (!operationChars.includes(item)) {\r\n      splitedEquation[index] = TimeStringToNumber(item);\r\n    }\r\n  });\r\n\r\n  return Math.round(math.evaluate(splitedEquation.join('')));\r\n}\r\n","import { ReturnTypes } from '../enums';\r\nimport EquationToSeconds from './equation-to-seconds';\r\n\r\nfunction SecondsToDays(secontsTo: number) {\r\n  let toDays = secontsTo;\r\n\r\n  const days = Math.floor(toDays / 86400);\r\n  toDays -= days * 86400;\r\n  const hours = Math.floor(toDays / 3600);\r\n  toDays -= hours * 3600;\r\n  const minutes = Math.floor(toDays / 60);\r\n  toDays -= minutes * 60;\r\n  const seconds = toDays;\r\n  return `${days}d${hours}h${minutes}m${seconds}s`;\r\n}\r\n\r\nfunction SecondsToHours(secontsTo: number) {\r\n  let toHours = secontsTo;\r\n  const hours = Math.floor(toHours / 3600);\r\n  toHours -= hours * 3600;\r\n  const minutes = Math.floor(toHours / 60);\r\n  toHours -= minutes * 60;\r\n  const seconds = toHours;\r\n  return `${hours}h${minutes}m${seconds}s`;\r\n}\r\n\r\nfunction SecondsToMinutes(secontsTo: number) {\r\n  let toMinutes = secontsTo;\r\n  const minutes = Math.floor(toMinutes / 60);\r\n  toMinutes -= minutes * 60;\r\n  const seconds = toMinutes;\r\n  return `${minutes}m${seconds}s`;\r\n}\r\n\r\nfunction SecondsToSeconds(secontsTo: number) {\r\n  return `${secontsTo}s`;\r\n}\r\n\r\nexport default function SecondsTo(equations: string[], resultType: ReturnTypes) {\r\n  let result = '';\r\n\r\n  switch (resultType) {\r\n    case ReturnTypes.days:\r\n      result = SecondsToDays(EquationToSeconds(equations));\r\n      break;\r\n    case ReturnTypes.hours:\r\n      result = SecondsToHours(EquationToSeconds(equations));\r\n      break;\r\n    case ReturnTypes.minutes:\r\n      result = SecondsToMinutes(EquationToSeconds(equations));\r\n      break;\r\n    case ReturnTypes.seconds:\r\n      result = SecondsToSeconds(EquationToSeconds(equations));\r\n      break;\r\n    default:\r\n  }\r\n\r\n  return result;\r\n}\r\n","/* eslint-disable react/destructuring-assignment */\r\nimport React from 'react';\r\nimport { IEquation } from '../../interfaces';\r\n\r\nimport './index.css';\r\n\r\nexport default function History(props: any) {\r\n  const equationsHistory: IEquation[] = props.equationHistory;\r\n\r\n  return (\r\n    <div className=\"history-container\">\r\n      {/* <table cellSpacing={0} className=\"history-table\">\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              {equationsHistory[0]\r\n                ? (\r\n                  <>\r\n                    <p className=\"equation-box\" onClick={() => props.setHistInput(equationsHistory[0].equation)}>{equationsHistory[0].equation}</p>\r\n                    <p className=\"result-box\" onClick={() => props.setHistInput(equationsHistory[0].result)}>{equationsHistory[0].result}</p>\r\n                  </>\r\n                )\r\n                : <></>}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              {equationsHistory[1]\r\n                ? (\r\n                  <><p className=\"equation-box\" onClick={() => props.setHistInput(equationsHistory[1].equation)}>{equationsHistory[1].equation}</p>\r\n                    <p className=\"result-box\" onClick={() => props.setHistInput(equationsHistory[1].result)}>{equationsHistory[1].result}</p>\r\n                  </>\r\n                )\r\n                : <></>}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              {equationsHistory[2]\r\n                ? (\r\n                  <><p className=\"equation-box\" onClick={() => props.setHistInput(equationsHistory[2].equation)}>{equationsHistory[2].equation}</p>\r\n                    <p className=\"result-box\" onClick={() => props.setHistInput(equationsHistory[2].result)}>{equationsHistory[2].result}</p>\r\n                  </>\r\n                )\r\n                : <></>}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              {equationsHistory[3]\r\n                ? (\r\n                  <><p className=\"equation-box\" onClick={() => props.setHistInput(equationsHistory[3].equation)}>{equationsHistory[3].equation}</p>\r\n                    <p className=\"result-box\" onClick={() => props.setHistInput(equationsHistory[3].result)}>{equationsHistory[3].result}</p>\r\n                  </>\r\n                )\r\n                : <></>}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              {equationsHistory[4]\r\n                ? (\r\n                  <><p className=\"equation-box\" onClick={() => props.setHistInput(equationsHistory[4].equation)}>{equationsHistory[4].equation}</p>\r\n                    <p className=\"result-box\" onClick={() => props.setHistInput(equationsHistory[4].result)}>{equationsHistory[4].result}</p>\r\n                  </>\r\n                )\r\n                : <></>}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              {equationsHistory[5]\r\n                ? (\r\n                  <><p className=\"equation-box\" onClick={() => props.setHistInput(equationsHistory[5].equation)}>{equationsHistory[5].equation}</p>\r\n                    <p className=\"result-box\" onClick={() => props.setHistInput(equationsHistory[5].result)}>{equationsHistory[5].result}</p>\r\n                  </>\r\n                )\r\n                : <></>}\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport './index.css';\r\n\r\nexport default function Keypad(props: any) {\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td className=\"keypad-button is-number\" onClick={() => props.addCharacter('1')}>1</td>\r\n        <td className=\"keypad-button is-number\" onClick={() => props.addCharacter('2')}>2</td>\r\n        <td className=\"keypad-button is-number\" onClick={() => props.addCharacter('3')}>3</td>\r\n        <td className=\"keypad-button is-operation\" onClick={() => props.addCharacter('d')}>d</td>\r\n      </tr>\r\n      <tr>\r\n        <td className=\"keypad-button is-number\" onClick={() => props.addCharacter('4')}>4</td>\r\n        <td className=\"keypad-button is-number\" onClick={() => props.addCharacter('5')}>5</td>\r\n        <td className=\"keypad-button is-number\" onClick={() => props.addCharacter('6')}>6</td>\r\n        <td className=\"keypad-button is-operation\" onClick={() => props.addCharacter('h')}>h</td>\r\n      </tr>\r\n      <tr>\r\n        <td className=\"keypad-button is-number\" onClick={() => props.addCharacter('7')}>7</td>\r\n        <td className=\"keypad-button is-number\" onClick={() => props.addCharacter('8')}>8</td>\r\n        <td className=\"keypad-button is-number\" onClick={() => props.addCharacter('9')}>9</td>\r\n        <td className=\"keypad-button is-operation\" onClick={() => props.addCharacter('m')}>m</td>\r\n      </tr>\r\n      <tr>\r\n        <td className=\"keypad-button is-operation\" onClick={() => props.addCharacter('+')}>+</td>\r\n        <td className=\"keypad-button is-number\" onClick={() => props.addCharacter('0')}>0</td>\r\n        <td className=\"keypad-button is-operation\" onClick={() => props.addCharacter('-')}>-</td>\r\n        <td className=\"keypad-button is-operation\" onClick={() => props.addCharacter('s')}>s</td>\r\n      </tr>\r\n      <tr>\r\n        <td className=\"keypad-button is-operation\" onClick={() => props.addCharacter('*')}>*</td>\r\n        <td className=\"keypad-button is-operation\" onClick={() => props.addCharacter('/')}>/</td>\r\n        <td className=\"keypad-button is-operation\" onClick={() => props.addCharacter('(')}>(</td>\r\n        <td className=\"keypad-button is-operation\" onClick={() => props.addCharacter(')')}>)</td>\r\n      </tr>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport DatePickerInput from 'react-date-picker';\r\nimport TimePickerInput from 'react-time-picker';\r\n\r\nimport './index.css';\r\n\r\nexport default function DatePicker(props: any) {\r\n  const [startDate, setStartDate] = useState<Date>(new Date());\r\n  const [endDate, setEndDate] = useState<Date>(new Date());\r\n  const [result, setResult] = useState('');\r\n\r\n  const calculateTime = () => {\r\n    const start = startDate.getTime() / 1000;\r\n    const end = endDate.getTime() / 1000;\r\n\r\n    // setResult(SecondsToHours(end - start));\r\n  };\r\n\r\n  const startDateHandle = (date: any) => {\r\n    setStartDate(date);\r\n    calculateTime();\r\n  };\r\n\r\n  const startTimeHandle = (time: any) => {\r\n    const newDate = new Date(`${startDate.toJSON().substr(0, 11)}${time}`);\r\n    // newDate.setDate(newDate.getDate() - 1);\r\n    setStartDate(newDate);\r\n    calculateTime();\r\n  };\r\n\r\n  const endDateHandle = (date: any) => {\r\n    setEndDate(date);\r\n    calculateTime();\r\n  };\r\n\r\n  const endTimeHandle = (time: any) => {\r\n    const newDate = new Date(`${endDate.toISOString().substr(0, 10)} ${time}`);\r\n    // newDate.setDate(newDate.getDate() - 1);\r\n    setEndDate(newDate);\r\n    calculateTime();\r\n  };\r\n\r\n  return (\r\n    <tr className=\"date-time-picker-frame\">\r\n      <td colSpan={4}>\r\n        <div className=\"date-pickers-container\">\r\n          <div className=\"date-picker-container\">\r\n            Start\r\n            <div>\r\n              <DatePickerInput value={startDate} onChange={startDateHandle} />\r\n              <TimePickerInput value={startDate} onChange={startTimeHandle} format=\"HH:mm:ss\" disableClock />\r\n            </div>\r\n          </div>\r\n          <div className=\"date-picker-container\">\r\n            End\r\n            <div>\r\n              <DatePickerInput value={endDate} onChange={endDateHandle} />\r\n              <TimePickerInput value={endDate} onChange={endTimeHandle} format=\"HH:mm:ss\" disableClock />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <p>{result}</p>\r\n        </div>\r\n        <div>\r\n          <button type=\"button\">Sum on Calc</button>\r\n          <button type=\"button\">Sub on Calc</button>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { FaHistory } from 'react-icons/fa';\r\n\r\nimport { ReturnTypes, KeypadTypes } from '../../enums/index';\r\n\r\nimport SecondsTo from '../../functions/seconds-to';\r\nimport ValidateInput from '../../functions/validate-input';\r\nimport SplitEquation from '../../functions/split-equation';\r\n\r\nimport { IEquation } from '../../interfaces';\r\n\r\nimport './index.css';\r\nimport History from '../history';\r\nimport Keypad from '../keypad';\r\nimport DatePicker from '../date-picker/index';\r\n\r\nexport default function Calculator() {\r\n  const [calcInput, setCalcInput] = useState<string>('');\r\n  const [resultType, setResultType] = useState<ReturnTypes>(ReturnTypes.days);\r\n  const [errorMessage, setErrorMessage] = useState<string>();\r\n  const [showHistory, setShowHistory] = useState<boolean>(false);\r\n  const [history, setHistory] = useState<IEquation[]>([]);\r\n  const [keypadType, setKeypadType] = useState<KeypadTypes>(KeypadTypes.calc);\r\n\r\n  const addEquationToHistory = (equation: string, result: string) => {\r\n    if (history.length === 6) {\r\n      history.splice(0, 1);\r\n      history.push({ equation, result });\r\n    } else {\r\n      history.push({ equation, result });\r\n    }\r\n    setHistory(history);\r\n  };\r\n\r\n  const submitCalcInput = (e: any) => {\r\n    e.preventDefault();\r\n\r\n    // check if calc input is empty\r\n    if (!calcInput) {\r\n      setErrorMessage('you should type something');\r\n      return;\r\n    }\r\n\r\n    const splitedEquation = SplitEquation(calcInput);\r\n\r\n    const error = ValidateInput(splitedEquation);\r\n\r\n    // check if input has any error\r\n    if (error) {\r\n      setErrorMessage(error);\r\n      return;\r\n    }\r\n\r\n    setErrorMessage('');\r\n\r\n    const result = SecondsTo(splitedEquation, resultType);\r\n\r\n    addEquationToHistory(calcInput, result);\r\n    setCalcInput(result);\r\n  };\r\n\r\n  const backspaceCommand = () => {\r\n    setCalcInput(calcInput.substr(0, calcInput.length - 1));\r\n  };\r\n\r\n  return (\r\n    <div className=\"calc-container\">\r\n      <div>\r\n        <form onSubmit={submitCalcInput} className=\"calc-form\">\r\n          <textarea\r\n            className=\"calc-input\"\r\n            value={calcInput}\r\n            onChange={(e) => setCalcInput(e.target.value)}\r\n          />\r\n          <div className=\"result-type-list\">\r\n            <span onClick={() => setResultType(ReturnTypes.days)}>\r\n              <input type=\"radio\" value={ReturnTypes.days} name=\"timeType\" checked={resultType === ReturnTypes.days} /> in days\r\n            </span>\r\n            <span onClick={() => setResultType(ReturnTypes.hours)}>\r\n              <input type=\"radio\" value={ReturnTypes.hours} name=\"timeType\" checked={resultType === ReturnTypes.hours} /> in hours\r\n            </span>\r\n            <span onClick={() => setResultType(ReturnTypes.minutes)}>\r\n              <input type=\"radio\" value={ReturnTypes.minutes} name=\"timeType\" checked={resultType === ReturnTypes.minutes} /> in mins\r\n            </span>\r\n            <span onClick={() => setResultType(ReturnTypes.seconds)}>\r\n              <input type=\"radio\" value={ReturnTypes.seconds} name=\"timeType\" checked={resultType === ReturnTypes.seconds} /> in secs\r\n            </span>\r\n          </div>\r\n          <table className=\"calc-input-board\">\r\n            <tbody>\r\n              {\r\n              keypadType === 'calc'\r\n                ? <Keypad addCharacter={(character: string) => setCalcInput(calcInput + character)} />\r\n                : <DatePicker />\r\n                }\r\n              <tr>\r\n                <td className=\"keypad-button is-command\" colSpan={2} onClick={submitCalcInput}>Submit</td>\r\n                <td className=\"keypad-button is-command\" onClick={() => backspaceCommand()}>C</td>\r\n                <td className=\"keypad-button is-command\" onClick={() => setShowHistory(!showHistory)}><FaHistory /></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          {/* <div className=\"nav-bar\">\r\n            <button\r\n              type=\"button\"\r\n              className={`nav-button ${keypadType === KeypadTypes.calc ? 'selected-button' : 'unselected-button'}`}\r\n              onClick={() => setKeypadType(KeypadTypes.calc)}\r\n            >Calculator\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className={`nav-button ${keypadType === KeypadTypes.timeInBetween ? 'selected-button' : 'unselected-button'}`}\r\n              onClick={() => setKeypadType(KeypadTypes.timeInBetween)}\r\n            >Time in between\r\n            </button>\r\n          </div> */}\r\n        </form>\r\n      </div>\r\n      <div className={`history-frame ${showHistory ? 'should-show-history' : ''}`}>\r\n        <History setHistInput={(selectedHist: string) => setCalcInput(selectedHist)} equationsHistory={history} />\r\n      </div>\r\n      <span\r\n        className={`error-popup ${errorMessage ? 'should-show-error' : ''}`}\r\n      >{errorMessage}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","import CleanRawEquation from './clean-raw-equation';\r\nimport { operationChars } from './validate-input';\r\n\r\nexport default function SplitEquation(equation: string): string[] {\r\n  let preparedEquation = `${CleanRawEquation(equation)}`;\r\n\r\n  operationChars.forEach((char) => {\r\n    preparedEquation = preparedEquation.replaceAll(char, `~${char}~`);\r\n  });\r\n\r\n  const splitedEquation = preparedEquation.split('~');\r\n\r\n  return splitedEquation;\r\n}\r\n","export default function CleanRawEquation(equation: string) {\r\n  let result = equation.replaceAll('\\n', '');\r\n  result = result.replaceAll(' ', '');\r\n\r\n  return result;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { FaMoon, FaSun } from 'react-icons/fa';\r\nimport Calculator from '../../components/calculator';\r\n\r\nimport './index.css';\r\n\r\nexport default function LandingPage() {\r\n  const userMode = localStorage.getItem('user-mode');\r\n\r\n  const [mode, setMode] = useState(userMode || 'light-mode');\r\n\r\n  const changeMode = () => {\r\n    const nextMode = mode === 'light-mode' ? 'dark-mode' : 'light-mode';\r\n    setMode(nextMode);\r\n    localStorage.setItem('user-mode', nextMode);\r\n  };\r\n\r\n  return (\r\n    <div className={mode}>\r\n      <div className=\"landing-page\">\r\n        <div className=\"calc-frame\">\r\n          <Calculator />\r\n          <button\r\n            className=\"mode-button\"\r\n            type=\"button\"\r\n            onClick={() => changeMode()}\r\n          >\r\n            {mode === 'light-mode'\r\n              ? <FaSun className=\"light-mode-icon\" />\r\n              : <FaMoon className=\"dark-mode-icon\" />}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport LandingPage from './pages/landing-page';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <LandingPage />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}